"use strict";(self.webpackChunkwasmx_docs=self.webpackChunkwasmx_docs||[]).push([[9881],{3119:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>a,frontMatter:()=>d,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"overview/comparisons","title":"Comparisons","description":"Blockchain VMs","source":"@site/docs/overview/comparisons.md","sourceDirName":"overview","slug":"/overview/comparisons","permalink":"/docs/overview/comparisons","draft":false,"unlisted":false,"editUrl":"https://github.com/loredanacirstea/wasmx-docs/tree/main/docs/overview/comparisons.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/docs/overview/introduction"},"next":{"title":"Features Overview","permalink":"/docs/overview/features"}}');var i=n(4848),t=n(8453);const d={sidebar_position:2},l="Comparisons",c={},o=[{value:"Blockchain VMs",id:"blockchain-vms",level:2},{value:"Smart Contract Languages",id:"smart-contract-languages",level:3},{value:"wasmX language support:",id:"wasmx-language-support",level:4},{value:"MultiChain",id:"multichain",level:3},{value:"CrossChain",id:"crosschain",level:3},{value:"Protocol Upgrades",id:"protocol-upgrades",level:3},{value:"VM host API extensions",id:"vm-host-api-extensions",level:3},{value:"Mobile support",id:"mobile-support",level:3},{value:"Decentralized development",id:"decentralized-development",level:3},{value:"WASM standards",id:"wasm-standards",level:2}];function h(e){const s={a:"a",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"comparisons",children:"Comparisons"})}),"\n",(0,i.jsx)(s.h2,{id:"blockchain-vms",children:"Blockchain VMs"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Dimension"}),(0,i.jsx)(s.th,{children:"WasmX"}),(0,i.jsx)(s.th,{children:"EthereumVM"}),(0,i.jsx)(s.th,{children:"CosmWasm"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Protocol Upgrades"}),(0,i.jsx)(s.td,{children:"95% live on a running chain, 5% hard fork"}),(0,i.jsx)(s.td,{children:"100% Hard Fork"}),(0,i.jsx)(s.td,{children:"Limited Governed Upgrades"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Smart Contract Languages"}),(0,i.jsx)(s.td,{children:"any WASM-compiled or interpreted by a WASM contract"}),(0,i.jsx)(s.td,{children:"Solidity"}),(0,i.jsx)(s.td,{children:"Rust"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"MultiChain"}),(0,i.jsx)(s.td,{children:"yes"}),(0,i.jsx)(s.td,{children:"no"}),(0,i.jsx)(s.td,{children:"no"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"CrossChain"}),(0,i.jsx)(s.td,{children:"yes"}),(0,i.jsx)(s.td,{children:"no"}),(0,i.jsx)(s.td,{children:"yes"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"VM host API extensions"}),(0,i.jsx)(s.td,{children:"yes"}),(0,i.jsx)(s.td,{children:"no"}),(0,i.jsx)(s.td,{children:"no"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Mobile support"}),(0,i.jsx)(s.td,{children:"yes"}),(0,i.jsx)(s.td,{children:"no"}),(0,i.jsx)(s.td,{children:"no"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Decentralized development"}),(0,i.jsx)(s.td,{children:"yes"}),(0,i.jsx)(s.td,{children:"no"}),(0,i.jsx)(s.td,{children:"no"})]})]})]}),"\n",(0,i.jsx)(s.h3,{id:"smart-contract-languages",children:"Smart Contract Languages"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"wasmX"}),": any WASM-compiled language or any language with an interpreter compiled to WASM. Currently: AssemblyScript, Solidity, Rust, Go/TinyGo, JavaScript, Python, visual language for creating finite state machines, taylor (Lisp-like language)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"EthereumVM"}),": Solidity"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"CosmWasm"}),": Rust"]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"wasmx-language-support",children:"wasmX language support:"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Language"}),(0,i.jsx)(s.th,{children:"compiled to WASM"}),(0,i.jsx)(s.th,{children:"interpreted by WASM contract"}),(0,i.jsx)(s.th,{children:"compiled to assembly and interpreted by WASM contract"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Solidity"}),(0,i.jsx)(s.td,{children:"-"}),(0,i.jsx)(s.td,{children:"-"}),(0,i.jsx)(s.td,{children:"yes"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Yul"}),(0,i.jsx)(s.td,{children:"-"}),(0,i.jsx)(s.td,{children:"-"}),(0,i.jsx)(s.td,{children:"yes"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"EVM assembly"}),(0,i.jsx)(s.td,{children:"yes"}),(0,i.jsx)(s.td,{children:"yes"}),(0,i.jsx)(s.td,{children:"-"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Rust"}),(0,i.jsx)(s.td,{children:"yes"}),(0,i.jsx)(s.td,{children:"-"}),(0,i.jsx)(s.td,{children:"-"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"AssemblyScript"}),(0,i.jsx)(s.td,{children:"yes"}),(0,i.jsx)(s.td,{children:"-"}),(0,i.jsx)(s.td,{children:"-"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"JavaScript"}),(0,i.jsx)(s.td,{children:"yes"}),(0,i.jsx)(s.td,{children:"yes"}),(0,i.jsx)(s.td,{children:"-"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Python"}),(0,i.jsx)(s.td,{children:"-"}),(0,i.jsx)(s.td,{children:"yes"}),(0,i.jsx)(s.td,{children:"-"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"TinyGo"}),(0,i.jsx)(s.td,{children:"yes"}),(0,i.jsx)(s.td,{children:"-"}),(0,i.jsx)(s.td,{children:"-"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"C/C++"}),(0,i.jsx)(s.td,{children:"yes"}),(0,i.jsx)(s.td,{children:"-"}),(0,i.jsx)(s.td,{children:"-"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"graphical FSM"}),(0,i.jsx)(s.td,{children:"-"}),(0,i.jsx)(s.td,{children:"yes"}),(0,i.jsx)(s.td,{children:"-"})]})]})]}),"\n",(0,i.jsx)(s.h3,{id:"multichain",children:"MultiChain"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"wasmX"}),": supports running multiple chains on the same node client."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"EthereumVM"}),": no"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"CosmWasm"}),": no"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"crosschain",children:"CrossChain"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"wasmX"}),": supports cross-chain communication between wasmX blockchains and optionally, between wasmX and Cosmos chains (IBC)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"EthereumVM"}),": no"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"CosmWasm"})," chains: yes, between Cosmos chains throught IBC."]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"protocol-upgrades",children:"Protocol Upgrades"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"wasmX"}),": 95% of updates will be done live, on a running chain, through community governance. Including new feature additions, data structures extension, consensus changes. No need for validators to synchronize human presence for an upgrade."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"EthereumVM"}),": hard forks for adding features, validators meet at appointed time for upgrade."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"CosmWasm/Cosmos"}),": governed upgrades are limited to the hardcoded Cosmos SDK structure. Changing consensus protocols or data encodings requires a fork."]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"vm-host-api-extensions",children:"VM host API extensions"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"wasmX"}),": yes, host API extensions are supported. Current API interfaces: wasmX, ",(0,i.jsx)(s.a,{href:"/docs/apis/ewasm",children:"ewasm (EVM in WASM)"}),", ",(0,i.jsx)(s.a,{href:"/docs/apis/cosmwasm",children:"CosmWasm"}),", p2p, grpc, multichain, crosschain, SQL-like and key-value databases, IMAP, SMTP."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"EthereumVM"}),": no"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"CosmWasm"}),": no"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"mobile-support",children:"Mobile support"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"wasmX"}),": yes, we have tested running a wasmX blockchain on Android and iOS"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"EthereumVM"}),": no"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"CosmWasm"}),": no"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"decentralized-development",children:"Decentralized development"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"wasmX"}),": yes, anyone can build WASM modules to replace or add features and propose it by governance in a public way, with the same visibility as any other proposal."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"EthereumVM"}),": multiple clients and teams with unequal public visibility"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"CosmWasm"}),": centralized CosmWasm development, multiple chains with centralized teams using CosmWasm"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"wasm-standards",children:"WASM standards"}),"\n",(0,i.jsxs)(s.p,{children:["wasmX vs. WASIX (",(0,i.jsx)(s.a,{href:"https://wasix.org/",children:"https://wasix.org/"}),")"]}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Dimension"}),(0,i.jsx)(s.th,{children:"WasmX"}),(0,i.jsx)(s.th,{children:"WASI"}),(0,i.jsx)(s.th,{children:"WASIX"})]})}),(0,i.jsx)(s.tbody,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Target"}),(0,i.jsx)(s.td,{children:"Multi-node consensus"}),(0,i.jsx)(s.td,{children:"Single CPU"}),(0,i.jsx)(s.td,{children:"Multi CPU"})]})})]})]})}function a(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>d,x:()=>l});var r=n(6540);const i={},t=r.createContext(i);function d(e){const s=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),r.createElement(t.Provider,{value:s},e.children)}}}]);